// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactiontType {
  credit
  debit
}

enum Service {
  mps //Mpesa
  jen //jenga
}

enum ServiceId {
  express
  rtgs //send money to local kenya bank account using rtgs
  swift //send money to global accounts using swift
  kyc //know your customer
  equity // Send money with  equity bank
  placc //send money to another bank account using pesa link bank
  plmb //send money pesalink to mobile wallet
  mbwt //send money jenga mobile wallet across East africa 
}

model Currency {
  id             Int        @unique      @id @default(autoincrement())
  Wallet         Wallet[]
  externalWallet ExternalWallet[]

  currencyName    String @db.VarChar(255)
  currencyCode    String
  countryCode     String @unique @db.Char(2)
  countryName     String
  countryDialCode String
}

model Wallet {
  id         Int      @id @default(autoincrement())
  userId     String   @unique
  currency   Currency @relation(fields: [currencyId], references: [id])
  currencyId Int      
  balance    Int
  pin        String?  
  createdOn  DateTime @default(now())
  updatedOn  DateTime @default(now())

  pendingTransaction PendingTransaction[]
  Transaction        Transaction[]
  externalWallet     ExternalWallet?
}

model ExternalWallet {
  id        Int       @id @default(autoincrement())
  name      String
  serviceId ServiceId
  bankName  String?
  bankCode  String?   @db.Char(2)

  accountNumber String? //Bank account 
  phoneNumber   String?
  createdOn     DateTime @default(now())
  updatedOn     DateTime @default(now())
  currency      Currency @relation(fields: [currencyId], references: [id])
  currencyId    Int      @unique
  Wallet        Wallet   @relation(fields: [walletId], references: [id])
  walletId      Int      @unique
}

model PendingTransaction {
  id              Int              @id @default(autoincrement())
  transactionType TransactiontType
  amount          Int
  fee             Int
  comment         String           @db.VarChar(255)
  appId           String  //We dont need this ,do we?
  accNumber       String
  service         Service
  con             DateTime         @default(now())
  status          String           @db.VarChar(50)

  wallet   Wallet @relation(fields: [walletId], references: [id])
  walletId Int
}

model Logs {
  id Int @id @default(autoincrement())

  transactionId  Int
  transactionObj Json
  status         String @db.VarChar(50)
}

model Transaction {
  transactionId   Int              @unique
  transactionType TransactiontType

  wallet    Wallet   @relation(fields: [walletId], references: [id])
  walletId  Int
  amount    Int
  cost      Int
  comment   String   @db.VarChar(255)
  balance   Int
  accNumber String
  service   Service
  con       DateTime
  valueTime DateTime @default(now())
}

model Fee {
  id        Int       @id @default(autoincrement())
  serviceId ServiceId
  p3Fee     Json
}

model KenyaBanks {
  id          Int    @id @default(autoincrement())
  bankName    String
  bankCode    String @unique
  countryCode String
}
